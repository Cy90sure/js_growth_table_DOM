{"mappings":"ACEA,IAAM,EAAO,SAAS,oBAAoB,CAAC,MACrC,EAAQ,SAAS,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CACjD,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAI5C,SAAS,IACP,EAAa,QAAQ,CAAG,EAAK,MAAM,EAHpB,EAIf,EAAa,QAAQ,CAAG,EAAK,MAAM,EALpB,GAMf,EAAa,QAAQ,CAAG,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EANhC,GAOf,EAAa,QAAQ,CAAG,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EANhC,CAOjB,CAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EACE,GAAI,EAAK,MAAM,CAXA,GAWa,CAG1B,IAAK,IAFC,EAAS,SAAS,aAAa,CAAC,MAE7B,EAAQ,EAAG,EAAQ,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAE,IACnD,EAAO,MAAM,CAAC,SAAS,aAAa,CAAC,OAGvC,EAAM,MAAM,CAAC,GAEb,GACF,CACF,GAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EACM,EAAK,MAAM,CAxBA,IAyBb,CAAI,CAAC,EAAK,MAAM,CAAG,EAAE,CAAC,MAAM,GAE5B,IAEJ,GAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EACE,GAAI,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAjCZ,GAiCyB,CACjC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,MAAM,CAAC,SAAS,aAAa,CAAC,M,C,M,E,CAD/B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,GACF,CACF,GAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EACE,GAAI,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CA1CZ,EA0CyB,CACjC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,QAAQ,CAAC,EAAE,CAAC,MAAM,E,C,M,E,CADnB,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,GACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar rows = document.getElementsByTagName(\"tr\");\nvar table = document.getElementsByTagName(\"tbody\")[0];\nvar appendRowBtn = document.querySelector(\".append-row\");\nvar removeRowBtn = document.querySelector(\".remove-row\");\nvar appendColBtn = document.querySelector(\".append-column\");\nvar removeColBtn = document.querySelector(\".remove-column\");\nvar maxElems = 10;\nvar minElems = 2;\nfunction updateButtons() {\n    removeRowBtn.disabled = rows.length <= minElems;\n    appendRowBtn.disabled = rows.length >= maxElems;\n    appendColBtn.disabled = rows[0].children.length >= maxElems;\n    removeColBtn.disabled = rows[0].children.length <= minElems;\n}\nappendRowBtn.addEventListener(\"click\", function(e) {\n    if (rows.length < maxElems) {\n        var newRow = document.createElement(\"tr\");\n        for(var index = 0; index < rows[0].children.length; index++)newRow.append(document.createElement(\"td\"));\n        table.append(newRow);\n        updateButtons();\n    }\n});\nremoveRowBtn.addEventListener(\"click\", function(e) {\n    if (rows.length > minElems) {\n        rows[rows.length - 1].remove();\n        updateButtons();\n    }\n});\nappendColBtn.addEventListener(\"click\", function(e) {\n    if (rows[0].children.length < maxElems) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.append(document.createElement(\"td\"));\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        updateButtons();\n    }\n});\nremoveColBtn.addEventListener(\"click\", function(e) {\n    if (rows[0].children.length > minElems) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.children[0].remove();\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        updateButtons();\n    }\n});\n\n//# sourceMappingURL=index.03241442.js.map\n","'use strict';\n\nconst rows = document.getElementsByTagName('tr');\nconst table = document.getElementsByTagName('tbody')[0];\nconst appendRowBtn = document.querySelector('.append-row');\nconst removeRowBtn = document.querySelector('.remove-row');\nconst appendColBtn = document.querySelector('.append-column');\nconst removeColBtn = document.querySelector('.remove-column');\nconst maxElems = 10;\nconst minElems = 2;\n\nfunction updateButtons() {\n  removeRowBtn.disabled = rows.length <= minElems;\n  appendRowBtn.disabled = rows.length >= maxElems;\n  appendColBtn.disabled = rows[0].children.length >= maxElems;\n  removeColBtn.disabled = rows[0].children.length <= minElems;\n}\n\nappendRowBtn.addEventListener('click', (e) => {\n  if (rows.length < maxElems) {\n    const newRow = document.createElement('tr');\n\n    for (let index = 0; index < rows[0].children.length; index++) {\n      newRow.append(document.createElement('td'));\n    }\n\n    table.append(newRow);\n\n    updateButtons();\n  }\n});\n\nremoveRowBtn.addEventListener('click', (e) => {\n  if (rows.length > minElems) {\n    rows[rows.length - 1].remove();\n\n    updateButtons();\n  }\n});\n\nappendColBtn.addEventListener('click', (e) => {\n  if (rows[0].children.length < maxElems) {\n    for (const row of rows) {\n      row.append(document.createElement('td'));\n    }\n\n    updateButtons();\n  }\n});\n\nremoveColBtn.addEventListener('click', (e) => {\n  if (rows[0].children.length > minElems) {\n    for (const row of rows) {\n      row.children[0].remove();\n    }\n\n    updateButtons();\n  }\n});\n"],"names":["rows","document","getElementsByTagName","table","appendRowBtn","querySelector","removeRowBtn","appendColBtn","removeColBtn","updateButtons","disabled","length","children","addEventListener","e","newRow","createElement","index","append","remove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return"],"version":3,"file":"index.03241442.js.map"}